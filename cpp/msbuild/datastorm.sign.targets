<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <SIGN_SHA1 Condition="'$(SIGN_SHA1)' == ''">8D86DEC2699A6F6504D591B32B12D06909A57E48</SIGN_SHA1>
        <TimeStampServer>http://timestamp.digicert.com</TimeStampServer>
        <SignCommandSHA1>/f "$(SIGN_CERTIFICATE)" /v /sha1 $(SIGN_SHA1) /p $(SIGN_PASSWORD) /tr $(TimeStampServer) /td sha1 /fd sha1</SignCommandSHA1>
        <SignCommandSHA256>/f "$(SIGN_CERTIFICATE)" /v /sha1 $(SIGN_SHA1)  /p $(SIGN_PASSWORD) /tr $(TimeStampServer) /td sha256 /fd sha256 /as</SignCommandSHA256>
    </PropertyGroup>

    <!-- Authenticode sign task that retries on failures -->
    <UsingTask TaskName="SignTask"
               TaskFactory="CodeTaskFactory"
               AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <WorkingDirectory ParameterType="System.String" Required="true"/>
            <AdditionalOptions ParameterType="System.String" Required="true"/>
            <Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="True"/>
        </ParameterGroup>
        <Task>
            <Code Type="Class" Language="cs" Source="$(MSBuildThisFileDirectory)/SignTask.cs" />
        </Task>
    </UsingTask>

    <PropertyGroup>
        <SignTarget>$(OutDir)$(TargetName)$(TargetExt)</SignTarget>
    </PropertyGroup>

    <Target Name="SignPackage"
            Condition="Exists('$(SIGN_CERTIFICATE)') and (!Exists('$(IntDir)sign.log') or $([System.IO.File]::GetLastWriteTime('$(SignTarget)').Ticks) &gt; $([System.IO.File]::GetLastWriteTime('$(IntDir)sign.log').Ticks))">
        <Message Text="Signing $(SignTarget)" />

        <!-- Authenticode signing -->
        <SignTask
            WorkingDirectory="$(OutDir)"
            AdditionalOptions="$(SignCommandSHA1)"
            Files="$(TargetName)$(TargetExt)"/>

        <SignTask
            WorkingDirectory="$(OutDir)"
            AdditionalOptions="$(SignCommandSHA256)"
            Files="$(TargetName)$(TargetExt)"/>

        <WriteLinesToFile File                = "$(IntDir)sign.log"
                          Encoding            = "Unicode"
                          Overwrite           = "true"
                          Lines               = "Signing $(SignTarget)"/>
    </Target>

    <Target Name="SignPackageClean" AfterTargets="Clean">
        <Delete Files="$(IntDir)sign.log" />
    </Target>

    <PropertyGroup>
        <BuildDependsOn>
            $(BuildDependsOn);
            SignPackage
        </BuildDependsOn>
    </PropertyGroup>
</Project>
